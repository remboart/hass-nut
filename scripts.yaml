###### Scripts UPS #########
  beeper_enable:
    alias: "shell_command.beeper_enable"
    sequence:
      - service: shell_command.beeper_enable
  beeper_disable:
    alias: "shell_command.beeper_disable"
    sequence:
      - service: shell_command.beeper_disable
  initiate_selftest_quick:
    alias: "shell_command.initiate_selftest_quick"
    sequence:
      - service: shell_command.initiate_selftest_quick
  initiate_selftest_deep:
    alias: "shell_command.initiate_selftest_deep"
    sequence:
      - service: shell_command.initiate_selftest_deep
  initiate_selftest_stop:
    alias: "shell_command.initiate_selftest_stop"
    sequence:
      - service: shell_command.initiate_selftest_stop
  initiate_paneltest_start:
    alias: "shell_command.initiate_paneltest_start"
    sequence:
      - service: shell_command.initiate_paneltest_start
  initiate_paneltest_stop:
    alias: "shell_command.initiate_paneltest_stop"
    sequence:
      - service: shell_command.initiate_paneltest_stop
  beeper_mute:
    alias: "shell_command.beeper_mute"
    sequence:
      - service: shell_command.beeper_mute
  load_on:
    alias: "shell_command.load_on"
    sequence:
      - service: shell_command.load_on
  load_off:
    alias: "shell_command.load_off"
    sequence:
      - service: shell_command.load_off
  shutdown_stayoff:
    alias: "shell_command.initiate_shutdown_stayoff"
    sequence:
      - service: shell_command.initiate_shutdown_stayoff
  shutdown_stop:
    alias: "shell_command.shutdown_stop"
    sequence:
      - service: shell_command.shutdown_stop
#######################################
  group_visdet1:
    sequence:
      - service: group.set_visibility
        data_template:
          entity_id: '{{ entity_id }}'
          visible: '{{ is_state(cond, visible_state) }}'
  group_visdet2:
    sequence:
      - service: group.set_visibility
        data_template:
          entity_id: '{{ entity_id }}'
          visible: '{{ is_state(cond, visible_state) }}'
  group_visibility1:
    sequence:
      - service: group.set_visibility
        data_template:
          entity_id: '{{ entity_id }}'
          visible: '{{ is_state(cond, visible_state) }}'
  group_visibility2:
    sequence:
      - service: group.set_visibility
        data_template:
          entity_id: '{{ entity_id }}'
          visible: '{{ is_state(cond, visible_state) }}'
  group_visibilityopt2:
    sequence:
      - service: group.set_visibility
        data_template:
          entity_id: '{{ entity_id }}'
          visible: '{{ is_state(cond, visible_state) }}'
####################################
